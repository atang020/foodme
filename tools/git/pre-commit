#!/usr/bin/env python

import os, sys, time, subprocess, urllib2

"""
Checks your git commit with JSHint. Only checks staged files
"""
def jshint():
    
    errors = []
    
    # get all staged files
    f = os.popen('git diff --cached --name-only --diff-filter=ACM')
    
    for file in f.read().splitlines():

        # makes sure we're dealing javascript files
        if file.endswith('.js') and not file.startswith('node_modules/'):    	

            g = os.popen('jshint ' + file)
        
            # add all errors from all files together
            for error in g.readlines():
                errors.append(error)
    
    # got errors?
    if errors:
        for i, error in enumerate(errors):
            print error,
		
        # Abort the commit
        return False
    
    # All good
    return True


def serverStart():
    errors = []
    
    # Removes any leftover err.log files
    subprocess.call(["rm", "err.log"], cwd=".\\server\\", shell=True)
    
    # Creates a err.log and redirect stderr from server start
    with open('err.log', "w", cwd=".\\server\\") at errOut:
    	subprocess.call(["npm", "start"], cwd=".\\server\\", stderr=errOut, shell=True)
    
    # Wait for command to finish outputting
    time.sleep(2)

    # Closes server
    urllib2.urlopen("http://localhost:3000/debug/close")

    # Stats err.log file
    statErr = os.stat('.\\server\\err.log')

    # Checks files size and passes test if no stderr output
    if statErr.st_size > 0:
      return False
    else:
      return True


def mochaTest():
    errors = []

     # Removes any leftover err.log files
    subprocess.call(["rm", "err.log"], cwd=".\\server\\", shell=True)
    
    # Creates a err.log and redirect stderr from mocha tests
    with open('err.log', "w", cwd=".\\server\\") at errOut:
    	subprocess.call(["npm", "test"], cwd=".\\server\\", stderr=errOut, shell=True)
    
    # Wait for command to finish outputting
    time.sleep(2)

    # Stats err.log file
    statErr = os.stat('.\\server\\err.log')

    # Checks files size and passes test if no stderr output
    if statErr.st_size > 0:
      return False
    else:
      return True


if __name__ == '__main__':
    if jshint():
        if serverStart():
            sys.exit(0)
    sys.exit(1)
